# Build Flipper Zero Firmware using GitHub Actions
name: Build RogueMaster

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
  schedule:
    - cron: 30 0 * * *

env:
  REPO_URL: https://github.com/RogueMaster/flipperzero-firmware-wPlugins
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai
  
permissions:
  contents: write
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - name: 检查项目分支
        uses: actions/checkout@v3

      - name: 编译环境
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo timedatectl set-timezone "$TZ"
          sudo mkdir -p /workdir
          sudo chown $USER:$GROUPS /workdir
          
      - name: 下载固件源码
        working-directory: /workdir
        run: |
          df -hT $PWD
          git clone --recursive $REPO_URL
          ln -sf /workdir/flipperzero-firmware-wPlugins $GITHUB_WORKSPACE/flipperzero-firmware-wPlugins

      - name: SSH连接管理
        uses: P3TERX/ssh2actions@v1.0.0
        if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
        env:
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          
      - name: 编译固件
        id: compile
        run: |
          rmdir flipperzero-firmware-wPlugins/assets/dolphin/external/*
          sed -i '1,2!d' flipperzero-firmware-wPlugins/assets/dolphin/external/manifest.txt          
          cd flipperzero-firmware-wPlugins/
          ./fbt updater_package
          echo "status=success" >>$GITHUB_OUTPUT 
          echo "FILE_TIME=$(date "+%Y.%m.%d-%H.%M")" >> $GITHUB_ENV
          echo "GIT_NAME=RogueMaster-NoAnim" >> $GITHUB_ENV
          
      - name: 检查磁盘使用情况
        if: (!cancelled())
        run: df -hT

      - name: 组织文件
        id: organize
        if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
        run: |
          cd flipperzero-firmware-wPlugins/dist/f7-C/
          echo "FIRMWARE=$PWD" >> $GITHUB_ENV
          echo "status=success" >>$GITHUB_OUTPUT 
          
      - name: 上传固件目录
        uses: actions/upload-artifact@main
        if: steps.organize.outputs.status == 'success' && !cancelled()
        with:
          name: Flipper_firmware${{ env.GIT_NAME }}${{ env.FILE_TIME }}
          path: ${{ env.FIRMWARE }}

      - name: 生成release标签
        id: tag
        if: env.UPLOAD_RELEASE == 'true' && !cancelled()
        run: |
          echo "release_tag=${{ env.FILE_TIME }}【${{ env.GIT_NAME }}】" >>$GITHUB_OUTPUT 
          touch release.txt
          echo "[源码来源]($REPO_URL)" >> release.txt
          echo "status=success" >>$GITHUB_OUTPUT 
          
      - name: 上传固件到release
        uses: softprops/action-gh-release@v1
        if: steps.tag.outputs.status == 'success' && !cancelled()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: ${{ env.FILE_TIME }}【${{ env.GIT_NAME }}】
          tag_name: ${{ steps.tag.outputs.release_tag }}
          body_path: release.txt
          files: ${{ env.FIRMWARE }}/*

      - name: Delete workflow runs
        uses: GitRML/delete-workflow-runs@main
        with:
          retain_days: 150
          keep_minimum_runs: 200

      - name: Remove old Releases
        uses: dev-drprasad/delete-older-releases@v0.1.0
        if: env.UPLOAD_RELEASE == 'true' && !cancelled()
        with:
          keep_latest: 2000
          delete_tags: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
