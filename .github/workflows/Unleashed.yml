# Build Flipper Zero Firmware using GitHub Actions
name: Build Unleashed

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
  schedule:
    - cron: 30 23 * * *

env:
  REPO_URL: https://github.com/DarkFlippers/unleashed-firmware
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  NoAnim: false
  TZ: Asia/Shanghai
  GIT_NAME: Unleashed
  
permissions:
  contents: write
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - name: 检查项目分支
        uses: actions/checkout@v3

      - name: 编译环境
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo timedatectl set-timezone $TZ
          sudo apt install rename
          sudo mkdir -p /workdir
          sudo chown $USER:$GROUPS /workdir
          
      - name: 下载固件源码
        run: |
          df -hT $PWD
          git clone $REPO_URL
          ls
          ln -sf /unleashed-firmware /Flipper
          ls

      - name: SSH连接管理
        uses: P3TERX/ssh2actions@v1.0.0
        if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
        env:
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

      - name: 默认配置
        id: moreconfig
        run: |
          sed -i 's/false/true/g' Flipper/assets/resources/subghz/assets/dangerous_settings
          sed -i 's/430000000/430000000,430500000/g' Flipper/lib/subghz/subghz_setting.c
          sed -i 's/431500000/431500000,432800000/g' Flipper/lib/subghz/subghz_setting.c
          sed -i 's/430000000/430000000,430500000/g' Flipper/applications/main/subghz/views/subghz_frequency_analyzer.c
          sed -i 's/431500000/431500000,432800000/g' Flipper/applications/main/subghz/views/subghz_frequency_analyzer.c
          
      - name: 编译固件
        id: compile
        run: |
          cd Flipper/
          ./fbt updater_package
          echo "status=success" >>$GITHUB_OUTPUT 
          echo "FILE_TIME=$(date "+%Y%m%d-%H%M")" >> $GITHUB_ENV
          echo "FILE_DATE=$(date "+%Y%m%d")" >> $GITHUB_ENV
          echo "GIT_NAME=$GIT_NAME" >> $GITHUB_ENV
          
      - name: 检查磁盘使用情况
        if: (!cancelled())
        run: df -hT

      - name: 组织文件
        id: organize
        if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
        run: |
          cd Flipper/dist/f7-C/
          rm -rf *.tgz
          mv f7-update-* "${{ env.GIT_NAME }}-${{ env.FILE_TIME }}"
          tar -czf "${{ env.GIT_NAME }}-${{ env.FILE_TIME }}.tgz" "${{ env.GIT_NAME }}-${{ env.FILE_TIME }}"
          echo "FIRMWARE=$PWD" >> $GITHUB_ENV
          echo "status=success" >>$GITHUB_OUTPUT 
          
      - name: 上传固件目录
        uses: actions/upload-artifact@main
        if: steps.organize.outputs.status == 'success' && !cancelled()
        with:
          name: ${{ env.GIT_NAME }}-${{ env.FILE_TIME }}
          path: ${{ env.FIRMWARE }}

      - name: 生成ReleaseTag
        id: tag
        if: env.UPLOAD_RELEASE == 'true' && !cancelled()
        run: |
          echo "release_tag=${{ env.GIT_NAME }}-${{ env.FILE_DATE }}" >>$GITHUB_OUTPUT 
          touch release.txt
          echo "[源码来源]($REPO_URL)" >> release.txt
          echo "status=success" >>$GITHUB_OUTPUT 
          
      - name: 上传固件到Release
        uses: softprops/action-gh-release@v1
        if: steps.tag.outputs.status == 'success' && !cancelled()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: ${{ env.FILE_DATE }}_${{ env.GIT_NAME }}
          tag_name: ${{ steps.tag.outputs.release_tag }}
          body_path: release.txt
          files: ${{ env.FIRMWARE }}/*.tgz

      - name: Delete workflow runs
        uses: GitRML/delete-workflow-runs@main
        with:
          retain_days: 150
          keep_minimum_runs: 20

      - name: Remove old Releases
        uses: dev-drprasad/delete-older-releases@v0.2.1
        if: env.UPLOAD_RELEASE == 'true' && !cancelled()
        with:
          keep_latest: 20
          delete_tags: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
